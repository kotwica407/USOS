// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using USOSData;

namespace USOS.Migrations
{
    [DbContext(typeof(USOSContext))]
    [Migration("20190313114906_initial migration")]
    partial class initialmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("USOSData.Models.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Group");

                    b.Property<int?>("SubjectId");

                    b.Property<int?>("TeacherId");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("USOSData.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("StartYear");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("USOSData.Models.Semester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId");

                    b.Property<DateTime>("Since");

                    b.Property<DateTime>("Until");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("USOSData.Models.Semester_Student", b =>
                {
                    b.Property<int>("SemesterId");

                    b.Property<int>("StudentId");

                    b.Property<int?>("SemesterId1");

                    b.Property<int?>("StudentId1");

                    b.HasKey("SemesterId", "StudentId");

                    b.HasIndex("SemesterId1");

                    b.HasIndex("StudentId");

                    b.HasIndex("StudentId1");

                    b.ToTable("Semester_Students");
                });

            modelBuilder.Entity("USOSData.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(45);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(45);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("IndexNumber")
                        .IsRequired()
                        .HasMaxLength(6);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.Property<string>("TelephoneNumber")
                        .HasMaxLength(9);

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("USOSData.Models.Student_Activity", b =>
                {
                    b.Property<int>("StudentId");

                    b.Property<int>("ActivityId");

                    b.Property<int?>("ActivityId1");

                    b.Property<decimal>("Grade");

                    b.Property<int?>("StudentId1");

                    b.HasKey("StudentId", "ActivityId");

                    b.HasIndex("ActivityId");

                    b.HasIndex("ActivityId1");

                    b.HasIndex("StudentId1");

                    b.ToTable("Student_Activities");
                });

            modelBuilder.Entity("USOSData.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int?>("SemesterId");

                    b.HasKey("Id");

                    b.HasIndex("SemesterId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("USOSData.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(45);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(45);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.Property<string>("TelephoneNumber")
                        .HasMaxLength(9);

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("USOSData.Models.Activity", b =>
                {
                    b.HasOne("USOSData.Models.Subject")
                        .WithMany("Activities")
                        .HasForeignKey("SubjectId");

                    b.HasOne("USOSData.Models.Teacher", "Teacher")
                        .WithMany("Activities")
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("USOSData.Models.Semester", b =>
                {
                    b.HasOne("USOSData.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("USOSData.Models.Semester_Student", b =>
                {
                    b.HasOne("USOSData.Models.Semester")
                        .WithMany("Semester_Students")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("USOSData.Models.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId1");

                    b.HasOne("USOSData.Models.Student")
                        .WithMany("Semester_Students")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("USOSData.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId1");
                });

            modelBuilder.Entity("USOSData.Models.Student_Activity", b =>
                {
                    b.HasOne("USOSData.Models.Activity")
                        .WithMany("Student_Activities")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("USOSData.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId1");

                    b.HasOne("USOSData.Models.Student")
                        .WithMany("Student_Activities")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("USOSData.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId1");
                });

            modelBuilder.Entity("USOSData.Models.Subject", b =>
                {
                    b.HasOne("USOSData.Models.Semester")
                        .WithMany("Subjects")
                        .HasForeignKey("SemesterId");
                });
#pragma warning restore 612, 618
        }
    }
}
